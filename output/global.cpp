#include <misc/version.h>
#include <globals.h>

#include "global.h"

using namespace output;

void output::wrapGlobal(std::ostream& os, util::sref<Statement const> global)
{
    os << "/* Generated by Stekinscript:" + misc::version() + " */" << std::endl;
    os << "(function() {" << std::endl;
    if (stekin::Globals::g.use_class_ext) {
        os <<
            "function $extend(i, b) {"
            "    var base = b.$class;"
            "    for (var m in base) {"
            "        if (base.hasOwnProperty(k)) {"
            "            i[k] = base[k];"
            "        }"
            "    }"
            "    function ctor() {"
            "        this.constructor = i;"
            "    }"
            "    ctor.prototype = base.prototype;"
            "    i.prototype = new ctor();"
            "    i.$super = base.prototype;"
            "    return i;"
            "}";
    }
    global->write(os);
    os << "})();" << std::endl;
}
